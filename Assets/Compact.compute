// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CopyVertex
#pragma kernel CopyIndex

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
StructuredBuffer<uint3> IndexSource;
RWStructuredBuffer<uint> IndexDestination;


struct Vertex
{
    float3 position;
    float3 normal;
};

StructuredBuffer<Vertex> VertexSource;
RWStructuredBuffer<Vertex> VertexDestination;

[numthreads(1,1,1)]
void CopyVertex (uint3 id : SV_DispatchThreadID)
{
    
    VertexDestination[id.x] = VertexSource[id.x];
}

[numthreads(1,1,1)]
void CopyIndex (uint3 id : SV_DispatchThreadID)
{
    uint3 tri = IndexSource[id.x];
    IndexDestination[id.x * 3] = tri.x;
    IndexDestination[id.x * 3 + 1] = tri.y;
    IndexDestination[id.x * 3 + 2] = tri.z;
}
