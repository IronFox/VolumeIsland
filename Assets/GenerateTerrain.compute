// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Main

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture3D<float> DensityVolume;
RWTexture3D<float> MaterialVolume;
//AppendStructuredBuffer<uint3> TestBuffer;

float3 Origin;
float VoxelSize;
int SizeInVoxels;

#include "SimplexNoise.compute"



[numthreads(8, 8, 8)]
void Main (uint3 id : SV_DispatchThreadID)
{
    float3 center = (float3)(0.5);
    float3 fx = ((float3) id + 0.5) / (SizeInVoxels - 1);
    float d = distance(center,fx);
    d += SimplexNoise((id * VoxelSize + Origin) * 0.25) * 0.1;
    DensityVolume[id] = 0.9 - d;
    MaterialVolume[id] = 0;
}
